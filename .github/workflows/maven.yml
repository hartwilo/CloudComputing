# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cloudcomputing-cluster
  GKE_ZONE: us-central1-a
  DEPLOYMENT_NAME: gke-hello-user
  IMAGE: static-site

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: List directory items BEFORE
      run: |
        ls -la

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Cache Target
    - name: List target directory items AFTER
      run: |
        ls -la
        cd target
        ls -la

    - name: Cache Target
      uses: actions/upload-artifact@v3
      with:
        name: target-directory
        path: target
      
  test:
  
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
    
      - name: unittests
        run: mvn test
      
  SonarCloud-Analysis:
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
      - name: Analyze with SonarCloud         
    
        uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          # Additional arguments for the sonarcloud scanner
          args:             
            -Dsonar.projectKey=hartwilo_CloudComputing
            -Dsonar.organization=hartwilo

  Deploy:
    runs-on: ubuntu-latest
    needs: [test, SonarCloud-Analysis]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      #Download Target

      - name: List directory items BEFORE
        run: |
          ls -la

      - name: Download Target
        uses: actions/download-artifact@v3
        with:
          name: target-directory
          path: target

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: target

      - name: List target directory items AFTER
        run: |
          ls -la
          cd target
          ls -la

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with: 
          java-version: '11'
          distribution: 'adopt'

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'
          project_id: ${{secrets.GKE_PROJECT}}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: 'google-github-actions/get-gke-credentials@v0'
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
          .  

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/${IMAGE}:$GITHUB_SHA"

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide

      

  Notification:
    runs-on: ubuntu-latest
    needs: [Deploy]
    steps:
      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address:
          server_address: smtp.gmail.com
          # Required mail server port:
          server_port: 465
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: Github Actions job result
          # Required recipients' addresses:
          to: 21halo1dpt@hft-stuttgart.de
          # Required sender full name (address can be skipped):
          from: Hellu User - Pipeline # <user@example.com>
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional plain body:
          body: "Result of latest run: ${{github.job}} job in workflow ${{ github.workflow }} has ${{ job.status }}
                https://sonarcloud.io/dashboard?id=hartwilo_CloudComputing&branch=main"
          # Optional unsigned/invalid certificates allowance:
          ignore_cert: true
          # Optional converting Markdown to HTML (set content_type to text/html too):
          convert_markdown: true
          # Optional priority: 'high', 'normal' (default) or 'low'
          priority: normal